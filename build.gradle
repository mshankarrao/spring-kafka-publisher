buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
        springCloudVersion = 'Finchley.M9'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
group = 'net.technocart'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'


bootJar{
    baseName = project.name
    version = "${getVersionName()}"
    project.version=version
}

println bootJar.version

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
    maven {
        url "/Users/shankarraomata/Documents/repository"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact file("build/libs/${bootJar.baseName}-${bootJar.version}.jar")

        }
    }
    repositories {
        maven {
            url "/Users/shankarraomata/Documents/repository"
        }
    }
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.cloud:spring-cloud-starter-sleuth')
    compile('org.springframework.cloud:spring-cloud-stream')
    compile('org.springframework.cloud:spring-cloud-stream-binder-kafka')
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile('org.springframework.kafka:spring-kafka')
    runtime('org.springframework.boot:spring-boot-devtools')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.cloud:spring-cloud-stream-test-support')
    testCompile('com.jayway.jsonpath:json-path')
}

//method for getting the gitversion
def getVersionName(){
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
